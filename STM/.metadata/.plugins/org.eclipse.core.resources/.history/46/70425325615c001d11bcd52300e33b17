/*
 * button.c
 *
 *  Created on: Nov 4, 2022
 *      Author: MINH
 */
#include "button.h"

int button_status = BUTTON_INIT;
int button_pressed_flag = 0;
int button_pressed1s_flag = 0;
int button_pressed3s_flag = 0;
int button_released_flag = 0;

int button_pressed_count = 0;

int keyReg0 = IS_RELEASED;
int keyReg1 = IS_RELEASED;
int keyReg2;

int button_buffer;

void input_processing(){
	keyReg0 = keyReg1;
	keyReg1 = keyReg2;
	keyReg2 = HAL_GPIO_ReadPin(BUTTON_1_GPIO_Port, BUTTON_1_Pin);

	switch(button_status){
		case BUTTON_INIT:
			if(keyReg0 == keyReg1 && keyReg1 == keyReg2){
				button_buffer = keyReg0;
				button_status = STABLE;
			}
			break;
		case STABLE:
			if(button_buffer == IS_PRESS){
				button_status = PRESSED;
			}
			if(!(keyReg0 == keyReg1 && keyReg1 == keyReg2)){
				button_status =BOUNCING_1;
			}

			break;
		case PRESSED:
			button_pressed_flag = 1;
			if(keyReg0 == keyReg1 && keyReg1 == keyReg2){
				button_pressed_count++;
			}else{
				button_status = BOUNCING_2;
				button_pressed_count = 0;
			}
			if(button_pressed_count >= 100){
				button_pressed1s_flag = 1;
			}
			if(button_pressed_count >= 300){
				button_pressed3s_flag = 1;
			}
			break;
		case BOUNCING_2:
			if(keyReg0 == keyReg1 && keyReg1 == keyReg2){
				button_buffer = keyReg0;
				button_status = RELEASED;
			}
			break;
		case RELEASED:
			button_released_flag = 1;
			button_pressed_flag = 0;
			button_pressed1s_flag = 0;
			button_pressed3s_flag = 0;
			if(!(keyReg0 == keyReg1 && keyReg1 == keyReg2)){
				button_status = BOUNCING_1;
			}
			break;
		case BOUNCING_1:
			if(keyReg0 == keyReg1 && keyReg1 == keyReg2){
				button_buffer = keyReg0;
				button_status = STABLE;
			}
			break;
		default:
			break;
	}

}
